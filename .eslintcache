[{"C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api\\src\\index.js":"1","C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api\\src\\App.js":"2","C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api - Copy\\src\\index.js":"3","C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api - Copy\\src\\App.js":"4"},{"size":433,"mtime":1608027248084,"results":"5","hashOfConfig":"6"},{"size":3116,"mtime":1608034999256,"results":"7","hashOfConfig":"6"},{"size":433,"mtime":1608027248084,"results":"8","hashOfConfig":"9"},{"size":4189,"mtime":1608061675136,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uy9zq",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1k8vx3i",{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api\\src\\index.js",[],"C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api\\src\\App.js",["21","22","23"],"C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api - Copy\\src\\index.js",[],["24","25"],"C:\\Users\\Charles Karira\\Documents\\GitHub\\node_js\\EXAMPLE_DEV\\brad traversy\\CHUCKNORRIS API\\chucknorris-api - Copy\\src\\App.js",["26","27","28","29","30","31","32","33"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\n// to use img you have to import it\r\nimport Chuck from './chuck.png';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\");\r\nfunction App() {\r\n\r\n\r\n\r\n// creata a state and call function to setstate\r\nconst [state, setState] = useState({\r\n  joke: '',\r\n  searchedjoke: '',\r\n  categories: []\r\n})\r\n\r\nconst [query, setQuery] = useState('sport')\r\nconst [querycat, setQuerycat] = useState(\"sport\");\r\n\r\nconst [data, setData] = useState([])\r\nconst [q,setQ] =useState(\"\")\r\n\r\n/*\r\nuseEffect(()=> {\r\n  fetch(\"https://api.chucknorris.io/jokes/random?category={category}\")\r\n    .then((response) => response.json() )\r\n    .then((json) => setData(json));\r\n\r\n}, []);\r\n*/\r\n\r\n\r\n\r\n  // best way to grab data from url\r\n  // use the USEEFFECT HOOK\r\n  useEffect(  () => {\r\n\r\n    fetchData();\r\n\r\n    //getCategories();\r\n\r\n  }, [])\r\n\r\n  const fetchData = async () =>{\r\n    const result = await axios.get(\"https://api.chucknorris.io/jokes/random\");\r\n\r\n    /*const response = await axios.get(\r\n      `https://api.chucknorris.io/jokes/search?query=${query}`\r\n    );\r\n    */\r\n\r\n    \r\n   const response = await axios.get(\r\n     `https://api.chucknorris.io/jokes/random?category=${query}`\r\n   );\r\n   \r\n    const catResponse = await axios.get(\r\n      `https://api.chucknorris.io/jokes/random?category=${querycat}`\r\n    );\r\n    console.log(result);\r\n    console.log(response);\r\n    //response.data.value\r\n    //console.log(result.data.value);\r\n\r\n    //console.log('searched joke is'+ response.data.result[0].value)\r\n      console.log(\"searched joke is\" + response.data.value);\r\n    console.log(catResponse)\r\n    console.log('categories is '+ catResponse.data.categories)\r\n\r\n\r\n  \r\n\r\n    ///\r\n    //call state and update value \r\n    setState({\r\n      ...state,\r\n      joke: result.data.value,\r\n\r\n      //searchedjoke: response.data.result[0].value,\r\n      searchedjoke: response.data.value,\r\n    });\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault()\r\n    fetchData();\r\n  }\r\n \r\n  // get categories\r\n  /*\r\n    const getCategories = async () => {\r\n      const results = await fetch(\r\n        \"https://api.chucknorris.io/jokes/categories\"\r\n      );\r\n      const categories = await results.json();\r\n      console.log(categories)\r\n      //this.setState({ categories });\r\n      setState({\r\n        categories: categories\r\n      })\r\n      \r\n    };\r\n    */\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h1 className=\"title\">Chuck Norris Api</h1>\r\n          <img src={Chuck} alt=\"Chuck Norris\" />\r\n        </div>\r\n\r\n        <div className=\"col-6 searchJokeCol\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              Search for a joke in a category e.g sport\r\n            </div>\r\n            <form onSubmit={handleSearch}>\r\n                <div className=\"card-body\">\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    value={query}\r\n                  />\r\n                </div>\r\n                    \r\n                      <div className=\"card-body\">\r\n                        <input\r\n                          type=\"button\"\r\n                          onChange={(e) => setQuery(e.target.value)}\r\n                          value={query}\r\n                        />\r\n                      </div>\r\n\r\n                    <div>\r\n                      <button type=\"submit\" className=\"btn btn-warning btn-lg\">\r\n                        GENERATE JOKE\r\n                      </button>\r\n                    </div>\r\n              </form>\r\n\r\n              <div>\r\n                <button className=\"btn btn-success btn-lg\">\r\n                  <a href=\"\">RANDOM</a>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"subtitle\">Here is the Joke</h2>\r\n\r\n        <break></break>\r\n        <h4>{state.searchedjoke}</h4>\r\n      </div>\r\n    \r\n  );\r\n  \r\n\r\n  \r\n}\r\n\r\n\r\nexport default App;\r\n",{"ruleId":"34","severity":1,"message":"35","line":17,"column":18,"nodeType":"36","messageId":"37","endLine":17,"endColumn":29},{"ruleId":"38","severity":1,"message":"39","line":28,"column":6,"nodeType":"40","endLine":28,"endColumn":8,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":108,"column":17,"nodeType":"44","endLine":108,"endColumn":28},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"34","severity":1,"message":"49","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":16},{"ruleId":"34","severity":1,"message":"35","line":23,"column":18,"nodeType":"36","messageId":"37","endLine":23,"endColumn":29},{"ruleId":"34","severity":1,"message":"50","line":25,"column":8,"nodeType":"36","messageId":"37","endLine":25,"endColumn":12},{"ruleId":"34","severity":1,"message":"51","line":25,"column":14,"nodeType":"36","messageId":"37","endLine":25,"endColumn":21},{"ruleId":"34","severity":1,"message":"52","line":26,"column":8,"nodeType":"36","messageId":"37","endLine":26,"endColumn":9},{"ruleId":"34","severity":1,"message":"53","line":26,"column":10,"nodeType":"36","messageId":"37","endLine":26,"endColumn":14},{"ruleId":"38","severity":1,"message":"39","line":47,"column":6,"nodeType":"40","endLine":47,"endColumn":8,"suggestions":"54"},{"ruleId":"42","severity":1,"message":"43","line":150,"column":19,"nodeType":"44","endLine":150,"endColumn":30},"no-unused-vars","'setQuerycat' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["55"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'ReactDOM' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'q' is assigned a value but never used.","'setQ' is assigned a value but never used.",["58"],{"desc":"59","fix":"60"},"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"61"},"Update the dependencies array to be: [fetchData]",{"range":"62","text":"63"},{"range":"64","text":"63"},[604,606],"[fetchData]",[972,974]]